swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: album-controller
    description: Album Controller
  - name: author-controller
    description: Author Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: producer-controller
    description: Producer Controller
  - name: song-controller
    description: Song Controller
paths:
  /albums:
    post:
      tags:
        - album-controller
      summary: save
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: album
          description: album
          required: true
          schema:
            $ref: '#/definitions/Album'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /albums/all:
    get:
      tags:
        - album-controller
      summary: getAll
      operationId: getAllUsingGET
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Album'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /albums/{id}:
    get:
      tags:
        - album-controller
      summary: get
      operationId: getUsingGET
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Album'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - album-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: album
          description: album
          required: true
          schema:
            $ref: '#/definitions/Album'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - album-controller
      summary: delete
      operationId: deleteUsingDELETE
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /authors:
    post:
      tags:
        - author-controller
      summary: save
      operationId: saveUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: author
          description: author
          required: true
          schema:
            $ref: '#/definitions/Author'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /authors/all:
    get:
      tags:
        - author-controller
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /authors/{id}:
    get:
      tags:
        - author-controller
      summary: get
      operationId: getUsingGET_1
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Author'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - author-controller
      summary: update
      operationId: updateUsingPUT_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: author
          description: author
          required: true
          schema:
            $ref: '#/definitions/Author'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - author-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /producers:
    post:
      tags:
        - producer-controller
      summary: save
      operationId: saveUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: producer
          description: producer
          required: true
          schema:
            $ref: '#/definitions/Producer'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /producers/all:
    get:
      tags:
        - producer-controller
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Producer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /producers/{id}:
    get:
      tags:
        - producer-controller
      summary: get
      operationId: getUsingGET_2
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Producer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - producer-controller
      summary: update
      operationId: updateUsingPUT_2
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: producer
          description: producer
          required: true
          schema:
            $ref: '#/definitions/Producer'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - producer-controller
      summary: delete
      operationId: deleteUsingDELETE_2
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /songs:
    get:
      tags:
        - song-controller
      summary: download
      operationId: downloadUsingGET
      produces:
        - '*/*'
      parameters:
        - name: filename
          in: query
          description: filename
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - song-controller
      summary: upload
      operationId: uploadUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - text/plain
      parameters:
        - in: body
          name: files
          description: files
          required: true
          schema:
            type: array
            items:
              type: file
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - song-controller
      summary: delete
      operationId: deleteUsingDELETE_3
      produces:
        - text/plain
      parameters:
        - name: filename
          in: query
          description: filename
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /songs/all:
    get:
      tags:
        - song-controller
      summary: getTitles
      operationId: getTitlesUsingGET
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /songs/info:
    get:
      tags:
        - song-controller
      summary: get
      operationId: getUsingGET_3
      produces:
        - application/json
      parameters:
        - name: filename
          in: query
          description: filename
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Song'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /songs/info/all:
    get:
      tags:
        - song-controller
      summary: getAll
      operationId: getAllUsingGET_3
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Song'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /songs/size:
    get:
      tags:
        - song-controller
      summary: getFileSize
      operationId: getFileSizeUsingGET
      produces:
        - text/plain
      parameters:
        - name: filename
          in: query
          description: filename
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: true
  /songs/{id}:
    put:
      tags:
        - song-controller
      summary: update
      operationId: updateUsingPUT_3
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: song
          description: song
          required: true
          schema:
            $ref: '#/definitions/Song'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Album:
    type: object
    required:
      - description
      - releaseDate
      - title
    properties:
      authors:
        type: array
        items:
          $ref: '#/definitions/Author'
      description:
        type: string
      id:
        type: integer
        format: int64
      producer:
        $ref: '#/definitions/Producer'
      releaseDate:
        type: string
        format: date-time
      title:
        type: string
    title: Album
  Author:
    type: object
    required:
      - dateOfBirth
      - name
      - surname
    properties:
      dateOfBirth:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      name:
        type: string
      nickname:
        type: string
      surname:
        type: string
    title: Author
  InputStream:
    type: object
    title: InputStream
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Producer:
    type: object
    required:
      - name
      - surname
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      nickname:
        type: string
      surname:
        type: string
    title: Producer
  Resource:
    type: object
    properties:
      description:
        type: string
      file:
        type: file
      filename:
        type: string
      inputStream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        type: string
        format: uri
      url:
        type: string
        format: url
    title: Resource
  Song:
    type: object
    required:
      - extension
      - path
      - size
      - title
    properties:
      album:
        $ref: '#/definitions/Album'
      authors:
        type: array
        items:
          $ref: '#/definitions/Author'
      extension:
        type: string
      id:
        type: integer
        format: int64
      path:
        type: string
      size:
        type: integer
        format: int64
      title:
        type: string
    title: Song
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View